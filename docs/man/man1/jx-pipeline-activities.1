.TH "JX-PIPELINE\-ACTIVITIES" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-pipeline\-activities \- Display one or more Activities on projects


.SH SYNOPSIS
.PP
\fBjx\-pipeline activities\fP


.SH DESCRIPTION
.PP
Display the current activities for one or more projects.


.SH OPTIONS
.PP
\fB\-b\fP, \fB\-\-batch\-mode\fP[=false]
    Runs in batch mode without prompting for user input

.PP
\fB\-\-build\fP=""
    The build number to filter on

.PP
\fB\-f\fP, \fB\-\-filter\fP=""
    Text to filter the pipeline names

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for activities

.PP
\fB\-\-log\-level\fP=""
    Sets the logging level. If not specified defaults to $JX\_LOG\_LEVEL

.PP
\fB\-s\fP, \fB\-\-sort\fP[=false]
    Sort activities by timestamp

.PP
\fB\-\-verbose\fP[=false]
    Enables verbose output. The environment variable JX\_LOG\_LEVEL has precedence over this flag and allows setting the logging level to any value of: panic, fatal, error, warn, info, debug, trace

.PP
\fB\-w\fP, \fB\-\-watch\fP[=false]
    Whether to watch the activities for changes


.SH EXAMPLE
.PP
# List the current activities for all applications in the current team
  jx pipeline activities

.PP
# List the current activities for application 'foo'
  jx pipeline act \-f foo

.PP
# Watch the activities for application 'foo'
  jx pipeline act \-f foo \-w


.SH SEE ALSO
.PP
\fBjx\-pipeline(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
