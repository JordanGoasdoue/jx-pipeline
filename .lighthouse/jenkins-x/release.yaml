apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: chart
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/go-plugin/release.yaml@versionStream
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          resources: {}
        - name: jx-variables
          resources: {}
        - image: golang:1.17.9-alpine3.15
          name: coverage-report
          resources: {}
          script: |
            #!/bin/sh
            source .jx/variables.sh
            apk add --update make bash curl gnupg coreutils git
            make test-coverage
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/alpine/codecov
            curl -Os https://uploader.codecov.io/latest/alpine/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/alpine/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            sha256sum -c codecov.SHA256SUM
            chmod +x codecov
            ./codecov -Z -B ${PULL_BASE_REF} -C ${PULL_BASE_SHA} -t ${CODECOV_TOKEN} -R . -f ./build/reports/cover.txt
          env:
          - name: CODECOV_TOKEN
            valueFrom:
              secretKeyRef:
                name: codecov-jx-plugins
                key: token
                optional: true
        - name: release-binary
          resources: {}
        - name: build-and-push-image
          resources: {}
        - name: chart-docs
          resources: {}
        - image: ghcr.io/jenkins-x/jx-boot:3.2.304
          name: release-chart
          resources: {}
          script: |
            #!/usr/bin/env sh
            # Not sure why we need this in jx-pipeline release pipelines
            cp /tekton/creds/.git-credentials /tekton/home/.git-credentials
            source .jx/variables.sh
            jx gitops helm release
        - name: changelog
          resources: {}
        # ToDo(@osama): Create a catalog task
        - image: alpine:3.16
          name: download-syft
          script: |
            #!/bin/sh
            apk add --no-cache curl unzip
            curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | \
            sh -s -- -b /workspace/source/bin v0.52.0
            chmod +x /workspace/source/bin/syft
            # Todo(@ankitm123/@osama): It would be better to just append workspace/source/bin in the upload-binaries step.
            # The reason we are adding /go/bin:/usr/local/go/bin is because goreleaser image needs that to locate the go executable when 
            # running the upload-binaries step
            # We could use goreleaser image for this step also
            echo "export PATH=$PATH:/go/bin:/usr/local/go/bin:/workspace/source/bin" >> .jx/variables.sh
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/supply-chain-security/task.yaml@versionStream
          name: build-and-push-sbom
          resources: {}
        - name: upload-binaries
          resources: {}
        - name: promote-release
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 1h30m0s
status: {}
